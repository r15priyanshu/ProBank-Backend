server.port=9094
spring.application.name=PROBANK-MESSAGE-SERVICE

#Custom Properties
app.environment=DEFAULT

#RabbitMQ Connection Details
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Defining multiple functions which might acts as producer or consumer of events
spring.cloud.function.definition=sendEmail;sendSms

#creating input bindings [ means this will act as consumer and looks in the queue with the name email-queue for messages and then trigger sendEmail ]
spring.cloud.stream.bindings.sendEmail-in-0.destination=email-exchange-request
spring.cloud.stream.bindings.sendEmail-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.sendSms-in-0.destination=sms-exchange-request
spring.cloud.stream.bindings.sendSms-in-0.group=${spring.application.name}

# Output binding for sending messages back to producer [ using exchange ]
spring.cloud.stream.bindings.sendEmail-out-0.destination=email-exchange-response
spring.cloud.stream.bindings.sendSms-out-0.destination=sms-exchange-response

#Actuator configs
management.endpoints.web.exposure.include=*
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.info.env.enabled=true
management.endpoint.env.show-values=always
management.endpoint.shutdown.enabled=true
endpoints.shutdown.enabled=true

#Below will be shown in /actuator/info
info.app.name=PROBANK-MESSAGE-SERVICE
info.app.description=Microservice For Handling Asynchronous Messages
info.app.version=1.0.0



